{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "portofolio-01",
  "type": "registry:block",
  "author": "shadcn (https://ui.shadcn.com)",
  "description": "minimal portfolio template design for professionals.",
  "registryDependencies": [
    "footer",
    "list"
  ],
  "files": [
    {
      "path": "blocks/portofolio-01/main.tsx",
      "content": "import { List } from \"./components/list\";\nimport { Footer } from \"./components/footer\";\nimport { projects } from \"./contents/projects\";\n\nexport default function Main() {\n  return (\n    <>\n      <div className=\" relative z-50 mx-auto flex h-full w-full justify-center px-4 pt-20 text-primary md:h-screen\">\n        <div>\n          <div>\n            <h1 className=\"text-lg font-semibold\">BroKarim</h1>\n          </div>\n          <div>\n            <p className=\"text-fg-muted\">Software Engineer</p>\n          </div>\n\n          <div>\n            <p className=\"mt-10 text-sm\">\n              Designing sleek, accessible, and modern UIs that set a new\n              standard in functionality and aesthetics\n            </p>\n          </div>\n          <div>\n            <h2 className=\"text-fg-muted mb-2 mt-10 text-sm\">Projects</h2>\n          </div>\n          <List items={projects} />\n          <div>\n            <Footer />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/main.tsx"
    },
    {
      "path": "blocks/portofolio-01/components/footer.tsx",
      "content": "import Link from \"next/link\";\n\nconst links = [\n  { label: \"GitHub\", href: \"https://github.com/BroKarim\" },\n  { label: \"X\", href: \"https://x.com/BroKariim\" },\n  { label: \"Thread\", href: \"https://www.threads.net/@brokariim\" },\n];\n\nexport const Footer = () => {\n  return (\n    <div className=\"my-20\">\n      <div className=\"text-fg-muted flex flex-col gap-2 border-t py-6 text-sm\">\n        <div className=\"text-fg-muted flex items-center gap-3 text-sm\">\n          <div>Find me on:</div>\n          {links.map((link) => (\n            <Link key={link.label} href={link.href} target=\"_blank\">\n              {link.label}\n            </Link>\n          ))}\n        </div>\n        <div>Or mail me at brokariim@gmail.com</div>\n      </div>\n    </div>\n  );\n};\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/portofolio-01/components/list.tsx",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport { Link } from \"next-view-transitions\";\nimport { cn } from \"@/lib/utils\";\nimport AnimatedBackground from \"./animated-background\";\n\nexport const List = ({\n  items,\n}: {\n  items: { title: string; description?: string; hint?: string; href: string }[];\n}) => {\n  const [hoveredIndex, setHoveredIndex] = useState<number | null>(null);\n\n  return (\n    <div className=\"text-sm\">\n      {items.map((item, index) => (\n        <AnimatedBackground\n          key={index}\n          className=\"rounded-lg bg-zinc-100/50 hover:text-primary dark:bg-zinc-800/50 \"\n          transition={{\n            type: \"spring\",\n            bounce: 0.2,\n            duration: 0.6,\n          }}\n          enableHover\n        >\n          <div>\n            <Link\n              href={item.href}\n              target={item.href.startsWith(\"http\") ? \"_blank\" : undefined}\n              className=\"w-full\"\n            >\n              <div\n                className={cn(\n                  \"flex items-center justify-between border-b py-3 duration-200\",\n                  hoveredIndex !== null && hoveredIndex !== index\n                    ? \"!opacity-50\"\n                    : \"\",\n                )}\n              >\n                <div className=\"flex flex-col\">\n                  <span>{item.title}</span>\n                  {item.description && <span>{item.description}</span>}\n                </div>\n                {item.hint && <span className=\" text-right\">{item.hint}</span>}\n              </div>\n            </Link>\n          </div>\n        </AnimatedBackground>\n      ))}\n    </div>\n  );\n};\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/portofolio-01/components/animated-background.tsx",
      "content": "\"use client\";\nimport { cn } from \"@/lib/utils\";\nimport { AnimatePresence, Transition, motion } from \"framer-motion\";\nimport {\n  Children,\n  cloneElement,\n  ReactElement,\n  useEffect,\n  useState,\n  useId,\n} from \"react\";\n\ntype AnimatedBackgroundProps = {\n  children:\n    | ReactElement<{ \"data-id\": string }>[]\n    | ReactElement<{ \"data-id\": string }>;\n  defaultValue?: string;\n  onValueChange?: (newActiveId: string | null) => void;\n  className?: string;\n  transition?: Transition;\n  enableHover?: boolean;\n};\n\nexport default function AnimatedBackground({\n  children,\n  defaultValue,\n  onValueChange,\n  className,\n  transition,\n  enableHover = false,\n}: AnimatedBackgroundProps) {\n  const [activeId, setActiveId] = useState<string | null>(null);\n  const uniqueId = useId();\n\n  const handleSetActiveId = (id: string | null) => {\n    setActiveId(id);\n\n    if (onValueChange) {\n      onValueChange(id);\n    }\n  };\n\n  useEffect(() => {\n    if (defaultValue !== undefined) {\n      setActiveId(defaultValue);\n    }\n  }, [defaultValue]);\n\n  return Children.map(children, (child: any, index) => {\n    const id = child.props[\"data-id\"];\n\n    const interactionProps = enableHover\n      ? {\n          onMouseEnter: () => handleSetActiveId(id),\n          onMouseLeave: () => handleSetActiveId(null),\n        }\n      : {\n          onClick: () => handleSetActiveId(id),\n        };\n\n    return cloneElement(\n      child,\n      {\n        key: index,\n        className: cn(\"relative \", child.props.className),\n        \"aria-selected\": activeId === id,\n        \"data-checked\": activeId === id ? \"true\" : \"false\",\n        ...interactionProps,\n      },\n      <>\n        <AnimatePresence initial={false}>\n          {activeId === id && (\n            <motion.div\n              layoutId={`background-${uniqueId}`}\n              className={cn(\"absolute inset-0\", className)}\n              transition={transition}\n              initial={{ opacity: defaultValue ? 1 : 0 }}\n              animate={{\n                opacity: 1,\n              }}\n              exit={{\n                opacity: 0,\n              }}\n            />\n          )}\n        </AnimatePresence>\n        <span className=\"z-10\">{child.props.children}</span>\n      </>,\n    );\n  });\n}\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/portofolio-01/contents/projects.ts",
      "content": "type Project = {\n  title: string;\n  hint: string;\n  description: string;\n  href: string;\n};\n\nexport const projects: Project[] = [\n  {\n    title: \"CodeSnap\",\n    hint: \"developer, contributor\",\n    description:\n      \"A tool for capturing and sharing beautifully styled code snippets.\",\n    href: \"#\",\n  },\n  {\n    title: \"DevQuest\",\n    hint: \"founder, architect\",\n    description:\n      \"An interactive platform for developers to learn, grow, and solve coding challenges together.\",\n    href: \"#\",\n  },\n  {\n    title: \"BugTrackr\",\n    hint: \"maintainer, engineer\",\n    description:\n      \"Streamlined issue tracking and task management for agile teams.\",\n    href: \"#\",\n  },\n  {\n    title: \"PixelCraft\",\n    hint: \"UI/UX enthusiast\",\n    description:\n      \"A design framework for creating visually stunning, pixel-perfect user interfaces.\",\n    href: \"#\",\n  },\n];\n",
      "type": "registry:file",
      "target": "app/data.ts"
    }
  ],
  "categories": [
    "portofolio"
  ]
}