{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "card-02",
  "type": "registry:block",
  "author": "shadcn (https://ui.shadcn.com)",
  "description": "Ideal for product designers.",
  "registryDependencies": [
    "pricing",
    "shades",
    "currency"
  ],
  "files": [
    {
      "path": "blocks/card-02/page.tsx",
      "content": "import { PricingCard } from \"./components/pricing-card\";\n\nconst TIERS = [\n  {\n    name: \"Teams\",\n    price: 12,\n    description:\n      \"Highly recommended for small teams who seek to upgrade their time & perform\",\n    features: [\n      \"1 team\",\n      \"Schedule meeting as team\",\n      \"Collective events\",\n      \"Team workflow\",\n    ],\n    cta: \"Get Started\",\n    linear: true,\n    default: true,\n  },\n];\n\nexport default function Page() {\n  return (\n    <>\n      <div className=\"max-w-screen bg-backgroud z-50 flex min-h-screen items-center justify-center p-4\">\n        {TIERS.map((tier) => (\n          <PricingCard key={tier.name} tier={tier} paymentFrequency=\"monthly\" />\n        ))}\n      </div>\n    </>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/page.tsx"
    },
    {
      "path": "blocks/card-02/components/pricing-card.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { BadgeCheck, ArrowRight } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card } from \"@/components/ui/card\";\nimport { TextureButton } from \"@/components/ui/texture-button\";\n\nexport interface PricingTier {\n  name: string;\n  price: number;\n  description: string;\n  features: string[];\n  cta: string;\n  linear?: boolean;\n  default?: boolean;\n}\n\ninterface PricingCardProps {\n  tier: PricingTier;\n  paymentFrequency: string;\n}\n\nexport function PricingCard({ tier }: PricingCardProps) {\n  const isLinear = tier.linear;\n  const isDefault = tier.default;\n\n  return (\n    <Card\n      className={cn(\n        \"relative w-96 overflow-hidden border border-white/60 dark:border-stone-950/60\",\n        \"bg-gradient-to-b from-neutral-100 to-white/70 dark:from-neutral-800 dark:to-neutral-900\",\n        isLinear ? \"text-primary\" : \"text-primary\",\n        isDefault && \"ring-2 ring-primary\",\n        \"bg-background/5\",\n        \"bg-gradient-to-br from-black/5 to-black/[0.02] dark:from-white/5 dark:to-white/[0.02]\",\n        \"backdrop-blur-xl backdrop-saturate-[180%]\",\n        \"border border-black/10 dark:border-white/10\",\n        \"shadow-[0_8px_16px_rgb(0_0_0_/_0.15)] dark:shadow-[0_8px_16px_rgb(0_0_0_/_0.25)]\",\n        \"translate-z-0 will-change-transform\",\n      )}\n    >\n      {isLinear && <LinearBackground />}\n      {isDefault && <DefaultBackground />}\n\n      <div\n        className={cn(\n          \"relative flex w-full flex-col gap-8 rounded-xl p-6\",\n          \"bg-gradient-to-br from-black/[0.05] to-transparent dark:from-white/[0.08] dark:to-transparent\",\n          \"backdrop-blur-md backdrop-saturate-150\",\n          \"border border-black/[0.05] dark:border-white/[0.08]\",\n\n          \"shadow-sm\",\n          \"translate-z-0 will-change-transform\",\n          \"before:pointer-events-none before:absolute before:inset-0 before:bg-gradient-to-br before:from-black/[0.02] before:to-black/[0.01] before:opacity-0 before:transition-opacity dark:before:from-white/[0.03] dark:before:to-white/[0.01]\",\n          \"hover:before:opacity-100\",\n        )}\n      >\n        <h2 className=\"flex w-full items-center justify-between gap-3 text-xl font-medium capitalize\">\n          {tier.name}\n          {isDefault && (\n            <Badge variant=\"accent\" className=\"z-10 p-1\">\n              30 days free trial\n            </Badge>\n          )}\n        </h2>\n\n        <div className=\"relative h-12\">\n          <>\n            <span className=\"text-4xl font-medium\">${tier.price}</span>\n            <p className=\"-mt-2 text-xs text-muted-foreground\">\n              Per month/user\n            </p>\n          </>\n        </div>\n        <TextureButton variant=\"accent\" className=\"w-full \">\n          {tier.cta}\n          <ArrowRight className=\"ml-2 h-4 w-4\" />\n        </TextureButton>\n\n        <div className=\"flex-1 space-y-2 border-t border-primary/40 pt-6\">\n          <h3 className=\"text-sm font-medium\">{tier.description}</h3>\n          <ul className=\"space-y-2 text-primary\">\n            {tier.features.map((feature, index) => (\n              <li\n                key={index}\n                className={cn(\n                  \"flex items-center gap-2 text-sm font-medium\",\n                  isLinear ? \"text-primary\" : \"text-primary\",\n                )}\n              >\n                <BadgeCheck className=\"h-4 w-4\" />\n                {feature}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </Card>\n  );\n}\n\nconst LinearBackground = () => (\n  <div className=\"absolute inset-0 bg-[linear-gradient(to_right,#4f4f4f2e_1px,transparent_1px),linear-gradient(to_bottom,#4f4f4f2e_1px,transparent_1px)] bg-[size:45px_45px] [mask-image:radial-gradient(ellipse_80%_50%_at_50%_0%,#000_70%,transparent_110%)]\" />\n);\n\nconst DefaultBackground = () => (\n  <div className=\"absolute inset-0 bg-[radial-gradient(ellipse_80%_80%_at_50%_-20%,rgba(120,119,198,0.1),rgba(255,255,255,0))]\" />\n);\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "ui/card.tsx",
      "content": "import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className,\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\";\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n));\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n));\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\" flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n));\nCardFooter.displayName = \"CardFooter\";\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n};\n",
      "type": "registry:ui",
      "target": "components/ui/card.tsx"
    },
    {
      "path": "ui/badge.tsx",
      "content": "import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants };\n",
      "type": "registry:ui",
      "target": "components/ui/badge.tsx"
    },
    {
      "path": "ui/texture-button.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariantsOuter = cva(\"\", {\n  variants: {\n    variant: {\n      primary:\n        \"w-full border border-[1px] border-black/10 bg-gradient-to-b from-black/70 to-black p-[1px] transition duration-300 ease-in-out dark:border-[2px] dark:border-black dark:from-white dark:to-white/80 \",\n      accent:\n        \"w-full border-[1px] border-black/10 bg-gradient-to-b from-indigo-300/90 to-indigo-500 p-[1px] transition duration-300 ease-in-out dark:border-[2px] dark:border-neutral-950 dark:from-indigo-200/70 dark:to-indigo-500 \",\n      destructive:\n        \"w-full border-[1px] border-black/10 bg-gradient-to-b from-red-300/90 to-red-500 p-[1px] transition duration-300 ease-in-out dark:border-[2px] dark:border-neutral-950 dark:from-red-300/90 dark:to-red-500 \",\n      secondary:\n        \"w-full border-[1px] border-black/20 bg-white/50 p-[1px] transition duration-300 ease-in-out dark:border-[2px] dark:border-neutral-950 dark:bg-neutral-600/50 \",\n      minimal:\n        \"group  w-full border-[1px] border-black/20 bg-white/50 to-white p-[1px] hover:bg-gradient-to-t hover:from-neutral-100  active:bg-neutral-200 dark:border-[2px] dark:border-neutral-950 dark:bg-neutral-600/80 dark:hover:from-neutral-600/50 dark:hover:to-neutral-600/70 dark:active:bg-neutral-800\",\n      icon: \"group rounded-full border border-black/10 bg-white/50 to-white p-[1px] hover:bg-gradient-to-t hover:from-neutral-100 active:bg-neutral-200 dark:border-neutral-950 dark:bg-neutral-600/50 dark:hover:from-neutral-700 dark:hover:to-neutral-600 dark:active:bg-neutral-800\",\n    },\n    size: {\n      sm: \"rounded-[6px]\",\n      default: \"rounded-[12px]\",\n      lg: \"rounded-[12px]\",\n      icon: \"rounded-full\",\n    },\n  },\n  defaultVariants: {\n    variant: \"primary\",\n    size: \"default\",\n  },\n});\n\nconst innerDivVariants = cva(\n  \"flex h-full w-full items-center justify-center text-muted-foreground\",\n  {\n    variants: {\n      variant: {\n        primary:\n          \"gap-2 bg-gradient-to-b from-neutral-800 to-black  text-sm text-white/90 transition duration-300 ease-in-out hover:from-stone-800 hover:to-neutral-800/70 active:bg-gradient-to-b  active:from-black active:to-black dark:from-neutral-200 dark:to-neutral-50 dark:text-black/80 dark:hover:from-stone-200 dark:hover:to-neutral-200 dark:active:from-stone-300 dark:active:to-neutral-300 \",\n        accent:\n          \"gap-2 bg-gradient-to-b from-indigo-400 to-indigo-600 text-sm text-white/90 transition duration-300 ease-in-out hover:bg-gradient-to-b hover:from-indigo-400/70 hover:to-indigo-600/70 active:bg-gradient-to-b active:from-indigo-400/80 active:to-indigo-600/80 dark:hover:from-indigo-400/70 dark:hover:to-indigo-600/70 dark:active:from-indigo-400 dark:active:to-indigo-600\",\n        destructive:\n          \"gap-2 bg-gradient-to-b from-red-400/60 to-red-500/60 text-sm text-white/90 transition duration-300 ease-in-out hover:bg-gradient-to-b hover:from-red-400/70 hover:to-red-600/70 active:bg-gradient-to-b active:from-red-400/80 active:to-red-600/80 dark:hover:from-red-400/70 dark:hover:to-red-500/80 dark:active:from-red-400 dark:active:to-red-500\",\n        secondary:\n          \"bg-gradient-to-b from-neutral-100/80 to-neutral-200/50 text-sm transition duration-300 ease-in-out hover:bg-gradient-to-b hover:from-neutral-200/40 hover:to-neutral-300/60 active:bg-gradient-to-b active:from-neutral-200/60 active:to-neutral-300/70 dark:from-neutral-800 dark:to-neutral-700/50 dark:hover:from-neutral-700 dark:hover:to-neutral-700/60 dark:active:from-neutral-800 dark:active:to-neutral-700\",\n        minimal:\n          \"bg-gradient-to-b from-white to-neutral-50/50 text-sm transition duration-300 ease-in-out group-hover:bg-gradient-to-b group-hover:from-neutral-50/50 group-hover:to-neutral-100/60 group-active:bg-gradient-to-b group-active:from-neutral-100/60 group-active:to-neutral-100/90 dark:from-neutral-800 dark:to-neutral-700/50 dark:group-hover:from-neutral-700 dark:group-hover:to-neutral-700/60 dark:group-active:from-neutral-800 dark:group-active:to-neutral-700\",\n        icon: \"rounded-full bg-gradient-to-b from-white to-neutral-50/50 group-active:bg-neutral-200 dark:from-neutral-800 dark:to-neutral-700/50 dark:group-active:bg-neutral-800\",\n      },\n      size: {\n        sm: \"rounded-[4px] px-4 py-1 text-xs\",\n        default: \"rounded-[10px] px-4 py-2 text-sm\",\n        lg: \"rounded-[10px] px-4 py-2 text-base\",\n        icon: \" rounded-full p-1\",\n      },\n    },\n    defaultVariants: {\n      variant: \"primary\",\n      size: \"default\",\n    },\n  },\n);\n\nexport interface UnifiedButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?:\n    | \"primary\"\n    | \"secondary\"\n    | \"accent\"\n    | \"destructive\"\n    | \"minimal\"\n    | \"icon\";\n  size?: \"default\" | \"sm\" | \"lg\" | \"icon\";\n  asChild?: boolean;\n}\n\nconst TextureButton = React.forwardRef<HTMLButtonElement, UnifiedButtonProps>(\n  (\n    {\n      children,\n      variant = \"primary\",\n      size = \"default\",\n      asChild = false,\n      className,\n      ...props\n    },\n    ref,\n  ) => {\n    const Comp = asChild ? Slot : \"button\";\n\n    return (\n      <Comp\n        className={cn(buttonVariantsOuter({ variant, size }), className)}\n        ref={ref}\n        {...props}\n      >\n        <div className={cn(innerDivVariants({ variant, size }))}>\n          {children}\n        </div>\n      </Comp>\n    );\n  },\n);\n\nTextureButton.displayName = \"TextureButton\";\n\nexport { TextureButton };\n",
      "type": "registry:ui",
      "target": "components/ui/texture-button.tsx"
    },
    {
      "path": "lib/utils.ts",
      "content": "import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n",
      "type": "registry:ui",
      "target": "lib/utils.ts"
    }
  ],
  "categories": [
    "card"
  ]
}